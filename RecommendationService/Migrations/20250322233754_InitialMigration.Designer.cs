// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecommendationService.Data;

#nullable disable

namespace RecommendationService.Migrations
{
    [DbContext(typeof(RecommendationDbContext))]
    [Migration("20250322233754_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RecommendationService.Models.MedicationRecommendation", b =>
                {
                    b.Property<string>("MedicationId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RecommendationUserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Dosage")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MedicationName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("RecommendationReason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Timing")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MedicationId", "RecommendationUserId");

                    b.HasIndex("RecommendationUserId");

                    b.ToTable("MedicationRecommendations");
                });

            modelBuilder.Entity("RecommendationService.Models.Recommendation", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RecommendationSummary")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("UserId");

                    b.ToTable("Recommendations");
                });

            modelBuilder.Entity("RecommendationService.Models.MedicationRecommendation", b =>
                {
                    b.HasOne("RecommendationService.Models.Recommendation", null)
                        .WithMany("MedicationRecommendations")
                        .HasForeignKey("RecommendationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RecommendationService.Models.Recommendation", b =>
                {
                    b.Navigation("MedicationRecommendations");
                });
#pragma warning restore 612, 618
        }
    }
}
